AWSTemplateFormatVersion: 2010-09-09
Description: ASO-Chiebukuro VPC Template.

Parameters: 
  Mykey:
    Description: Keypair Name
    Type: AWS::EC2::KeyPair::KeyName
  S3BucketName:
    Description: S3 Backet Name
    Type: String

Resources: 
# VPC Settings
  MyVPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: 172.31.0.0/16
      EnableDnsHostnames: True
      EnableDnsSupport: True
      Tags:
        - Key: Name
          Value: !Join ["_", [!Ref 'AWS::StackName',VPC]]
  PublicSubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref MyVPC
      AvailabilityZone:
        Fn::Select:
         - 0
         - Fn::GetAZs: ""
      CidrBlock: 172.31.0.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Join ["_", [!Ref 'AWS::StackName',Public]]
  PublicSubnet2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone:
        Fn::Select:
         - 1
         - Fn::GetAZs: ""
      VpcId: !Ref MyVPC
      CidrBlock: 172.31.1.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Join ["_", [!Ref 'AWS::StackName',Public]]
  PrivateSubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref MyVPC
      AvailabilityZone:
        Fn::Select:
         - 0
         - Fn::GetAZs: ""
      CidrBlock: 172.31.2.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Join ["_", [!Ref 'AWS::StackName',Private]]
  PrivateSubnet2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref MyVPC
      AvailabilityZone:
        Fn::Select:
         - 1
         - Fn::GetAZs: ""
      CidrBlock: 172.31.3.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Join ["_", [!Ref 'AWS::StackName',Private]]
  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: Name
          Value: !Join ["_", [!Ref 'AWS::StackName']]
  GatewayToInternet:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref MyVPC
      InternetGatewayId: !Ref InternetGateway
  PublicRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref MyVPC
  PublicRoute:
    Type: 'AWS::EC2::Route'
    DependsOn: GatewayToInternet
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  PublicSubnet1RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable
  PublicSubnet2RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicRouteTable

# Security Settings
  MaintenanceSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: SG for Maintenance Instance
      VpcId: !Ref MyVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
  DBSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: SG for DB Instance 
      VpcId: !Ref MyVPC
      SecurityGroupIngress:
        - IpProtocol: 'tcp'
          FromPort: 22
          ToPort: 22
          SourceSecurityGroupId: !Ref MaintenanceSG
        - IpProtocol: 'tcp'
          FromPort: 3306
          ToPort: 3306
          CidrIp: 172.31.0.0/16

# Instance Settings
  Pub1Instance:
    Type: AWS::EC2::Instance
    Properties:
      KeyName: !Ref Mykey
      ImageId: ami-0947d2ba12ee1ff75
      InstanceType: t2.micro
      SubnetId: !Ref PublicSubnet1
      SecurityGroupIds:
        - !Ref MaintenanceSG
      UserData: 
        Fn::Base64: !Sub |
          #!/bin/bash
          curl -sS https://github.com/fylufox.keys >> /home/ec2-user/.ssh/authorized_keys
          hostnamectl set-hostname Pub1.inet
      Tags:
        - Key: Name
          Value: Pub1
  Pri1Instance:
    Type: AWS::EC2::Instance
    Properties: 
      KeyName: !Ref Mykey
      ImageId: ami-0ff2eb01ede014f22
      InstanceType: t2.micro
      SubnetId: !Ref PrivateSubnet1
      PrivateIpAddress: '172.31.2.10'
      SecurityGroupIds:
        - !Ref DBSG
      UserData: 
        Fn::Base64: !Sub |
          #!/bin/bash
          curl -sS https://github.com/fylufox.keys >> /home/ec2-user/.ssh/authorized_keys
          hostnamectl set-hostname Pri1.db
      Tags:
        - Key: Name
          Value: Pri1.mainDB
  Pri2Instance:
    Type: AWS::EC2::Instance
    Properties:
      KeyName: !Ref Mykey
      ImageId: ami-0ff2eb01ede014f22
      InstanceType: t2.micro
      SubnetId: !Ref PrivateSubnet2
      PrivateIpAddress: '172.31.3.10'
      SecurityGroupIds:
        - !Ref DBSG
      UserData: 
        Fn::Base64: !Sub |
          #!/bin/bash
          curl -sS https://github.com/fylufox.keys >> /home/ec2-user/.ssh/authorized_keys
          hostnamectl set-hostname Pri2.db
      Tags:
        - Key: Name
          Value: Pri2.secondaryDB

# S3, VPC Endpoint settings
  VPCEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties: 
      RouteTableIds: 
        - !Ref PublicRouteTable
      ServiceName: !Sub "com.amazonaws.${AWS::Region}.s3"
      VpcEndpointType: Gateway
      VpcId: !Ref MyVPC
  s3Bucket:
    Type: AWS::S3::Bucket
    Properties: 
      AccessControl: Private
      BucketName: !Ref S3BucketName

Outputs:
  VPCID:
    Description: VPC ID
    Value: !Ref MyVPC
    Export:
      Name: ChiebukuroVPCID
  PrivateSubnet1ID:
    Description: Private Subnet A ID
    Value: !Ref "PrivateSubnet1"
    Export:
      Name: ChiebukuroPrivateSubnet1ID
  PrivateSubnet2ID:
    Description: Private Subnet B ID
    Value: !Ref "PrivateSubnet2"
    Export:
      Name: ChiebukuroPrivateSubnet2ID
  PublicSubnet1ID:
    Description: Public Subnet A ID
    Value: !Ref "PublicSubnet1"
    Export:
      Name: ChiebukuroPublicSubnet1ID
  PublicSubnet2ID:
    Description: Public Subnet B ID
    Value: !Ref "PublicSubnet2"
    Export:
      Name: ChiebukuroPublicSubnet2ID
  MainDBInstanceID:
    Description: MainDB Instance ID
    Value: !Ref Pri1Instance
    Export: 
      Name: ChiebukuroMainDBID
  SecondaryDBInstanceID:
    Description: MainDB Secondary ID
    Value: !Ref Pri2Instance
    Export: 
      Name: ChiebukuroSecondaryDBID
  MainDBInstanceIP:
    Description: MainDB Instance Private IP
    Value: !GetAtt Pri1Instance.PrivateIp
    Export: 
      Name: ChiebukuroMainDBIP
  SecondaryDBInstanceIP:
    Description: SecondaryDB Instance Private IP
    Value: !GetAtt Pri2Instance.PrivateIp
    Export: 
      Name: ChiebukuroSecondaryDBIP
  CreateS3Bucket:
    Description: Create S3 Bucket Name
    Value: S3BucketName
    Export: 
      Name: AtacchedS3