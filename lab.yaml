Parameters:
  Mykey:
    Description: Keypair Name
    Type: AWS::EC2::KeyPair::KeyName

Resources:
  MyVPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: 172.31.0.0/16
      Tags:
        - Key: Name
          Value: !Join ["_", [!Ref 'AWS::StackName']]
  PublicSubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref MyVPC
      AvailabilityZone:
        Fn::Select:
         - 0
         - Fn::GetAZs: ""
      CidrBlock: 172.31.0.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Join ["_", [!Ref 'AWS::StackName',Public]]
  PublicSubnet2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone:
        Fn::Select:
         - 1
         - Fn::GetAZs: ""
      VpcId: !Ref MyVPC
      CidrBlock: 172.31.1.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Join ["_", [!Ref 'AWS::StackName',Public]]
  PrivateSubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref MyVPC
      AvailabilityZone:
        Fn::Select:
         - 0
         - Fn::GetAZs: ""
      CidrBlock: 172.31.2.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Join ["_", [!Ref 'AWS::StackName',Private]]
  PrivateSubnet2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref MyVPC
      AvailabilityZone:
        Fn::Select:
         - 1
         - Fn::GetAZs: ""
      CidrBlock: 172.31.3.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Join ["_", [!Ref 'AWS::StackName',Private]]
  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: Name
          Value: !Join ["_", [!Ref 'AWS::StackName']]
  GatewayToInternet:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref MyVPC
      InternetGatewayId: !Ref InternetGateway
  PublicRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref MyVPC
  PublicRoute:
    Type: 'AWS::EC2::Route'
    DependsOn: GatewayToInternet
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  PublicSubnet1RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable
  PublicSubnet2RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicRouteTable

  PubInstanceSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: SG for Public Instance
      VpcId: !Ref MyVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0
  PriInstanceSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: SG for Private Instance 
      VpcId: !Ref MyVPC
      SecurityGroupIngress:
        IpProtocol: '-1'
        FromPort: '-1'
        ToPort: '-1'
        CidrIp: 0.0.0.0/0


  Pub1Instance:
    Type: AWS::EC2::Instance
    Properties:
      KeyName: !Ref Mykey
      ImageId: ami-0947d2ba12ee1ff75
      InstanceType: t2.micro
      SubnetId: !Ref PublicSubnet1
      SecurityGroupIds:
        - !Ref PubInstanceSG
      UserData: 
        Fn::Base64: !Sub |
          #!/bin/bash
          curl -sS https://github.com/fylufox.keys >> /home/ec2-user/.ssh/authorized_keys
          hostnamectl set-hostname Pub1.inet
      Tags:
        - Key: Name
          Value: Pub1
  Pri1Instance:
    Type: AWS::EC2::Instance
    Properties: 
      KeyName: !Ref Mykey
      ImageId: ami-0ff2eb01ede014f22
      InstanceType: t2.micro
      SubnetId: !Ref PrivateSubnet1
      PrivateIpAddress: '172.31.2.10'
      SecurityGroupIds:
        - !Ref PriInstanceSG
      UserData: 
        Fn::Base64: !Sub |
          #!/bin/bash
          curl -sS https://github.com/fylufox.keys >> /home/ec2-user/.ssh/authorized_keys
          hostnamectl set-hostname Pri1.db
      Tags:
        - Key: Name
          Value: Pri1.mainDB
  Pri2Instance:
    Type: AWS::EC2::Instance
    Properties:
      KeyName: !Ref Mykey
      ImageId: ami-0ff2eb01ede014f22
      InstanceType: t2.micro
      SubnetId: !Ref PrivateSubnet2
      PrivateIpAddress: '172.31.3.10'
      SecurityGroupIds:
        - !Ref PriInstanceSG
      UserData: 
        Fn::Base64: !Sub |
          #!/bin/bash
          curl -sS https://github.com/fylufox.keys >> /home/ec2-user/.ssh/authorized_keys
          hostnamectl set-hostname Pri2.db
      Tags:
        - Key: Name
          Value: Pri2.secondaryDB